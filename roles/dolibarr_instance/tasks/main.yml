---

  - include_role:
      name: _app_log_inventory

  - include_role:
      name: _letsencrypt_certificate

  - include_role:
      name: _create_database

  - name: create temporary download directory
    tempfile:
      state: directory
      suffix: "_app_new"
    register: _tmp_new_app
    changed_when: False

  - name: "retrieving app version {{ app_version }} in {{ _tmp_new_app.path }}"
    unarchive:
      src: "{{ app_src }}"
      dest: "{{ _tmp_new_app.path }}"
      remote_src: True
      group: "www-data"
      owner: "www-data"
    args:
      creates: "{{ app_instance_root }}"

  - name: "Move {{ _tmp_new_app.path }}/{{ app_src_root_name }} to {{ app_instance_root }}"
    command: "/bin/mv {{ _tmp_new_app.path }}/{{ app_src_root_name }} {{ app_instance_root }}"
    args:
      creates: "{{ app_instance_root }}"

  - name: "remove {{ _tmp_new_app.path }}"
    file:
      path: "{{ _tmp_new_app.path }}"
      state: absent
    changed_when: False

  - include_role:
      name: _app_backup

  - name: "{{ rev_proxy }} config for {{ app_instance_id }}"
    template:
      src: "app_{{ rev_proxy }}.j2"
      dest: "/etc/{{ rev_proxy }}/sites-available/{{ app_instance_id }}.conf"
    notify: reload {{ rev_proxy }}

  - include_role:
      name: _app_logrotate

  - name: "enable site for {{ app_domain }}"
    file:
      state: link
      path: "/etc/{{ rev_proxy }}/sites-enabled/{{ app_instance_id }}.conf"
      src: "/etc/{{ rev_proxy }}/sites-available/{{ app_instance_id }}.conf"
    notify: reload {{ rev_proxy }}

  - include_role:
      name: _app_monit
