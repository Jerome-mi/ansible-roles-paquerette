---

# https://nextcloud.com/install/#instructions-server

  - include_role:
      name: _app_log_inventory

  - include_role:
      name: _uninstall_instance_script

  - include_role:
      name: _letsencrypt_certificate

  - include_role:
      name: _create_database

  - name: create temporary download directory
    tempfile:
      state: directory
      suffix: "_app_new"
    register: _tmp_new_app
    changed_when: False

  - name: "retrieving nextcloud version {{ app_version }} in {{ _tmp_new_app.path }}"
    unarchive:
      src: "https://download.nextcloud.com/server/releases/nextcloud-{{ app_version }}.tar.bz2"
      dest: "{{ _tmp_new_app.path }}"
      remote_src: True
      group: "www-data"
      owner: "www-data"
    args:
      creates: "{{ app_instance_root }}"

  - name: "Move {{ _tmp_new_app.path }}/nextcloud to {{ app_instance_root }}"
    command: "/bin/mv {{ _tmp_new_app.path }}/nextcloud {{ app_instance_root }}"
    args:
      creates: "{{ app_instance_root }}"

  - name: "dir {{ app_data }}"
    file:
      path: "{{ app_data }}"
      state: directory
      mode: 0700
      group: "www-data"
      owner: "www-data"

  - name: "link data directory"
    file:
      state: link
      src: "{{ app_data }}"
      path: "{{ app_instance_root }}/data"

  - name: "remove {{ _tmp_new_app.path }}"
    file:
      path: "{{ _tmp_new_app.path }}"
      state: absent
    changed_when: False

  - name: "nextcloud base app configuration template"
    template:
      src: nextcloud_app_install.j2
      dest: "{{ app_instance_root }}/ansible_base_install.sh"
      mode: 0700

  - name: "nextcloud base app configuration"
    command: "{{ app_instance_root }}/ansible_base_install.sh"
    register: __ansible_base_install
    args:
      creates: "{{ app_instance_root }}/ansible_base_install.done"

  - name: "cron mode for background jobs"
    cron:
      name: "{{ app_instance_root }}/cron.php >/dev/null 2>&1"
      user: "www-data"
      minute: "*/15"
      job: "php -f {{ app_instance_root }}/cron.php >/dev/null 2>&1"

  - include_role:
      name: _app_backup

  - include_role:
      name: _app_logrotate

  - name: "template {{ rev_proxy }}_nextcloud.j2 {{ app_instance_id }}"
    template:
      src: "{{ rev_proxy }}_nextcloud.j2"
      dest: "/etc/{{ rev_proxy }}/sites-available/{{ app_instance_id }}.conf"
    notify: reload {{ rev_proxy }}

  - name: "enable site for {{ app_domain }}"
    file:
      state: link
      path: "/etc/{{ rev_proxy }}/sites-enabled/{{ app_instance_id }}.conf"
      src: "/etc/{{ rev_proxy }}/sites-available/{{ app_instance_id }}.conf"
    notify: reload {{ rev_proxy }}

  - include_role:
      name: _app_monit
