---

  - name: "install nginx"
    apt:
      name: nginx
      state: present
      update_cache: yes

  - name: "ufw: Allow Nginx Full"
    ufw:
      rule: allow
      name: Nginx Full

  - name: "Move /var/www {{ www_root }}"
    command: "/bin/mv /var/www {{ www_root }}"
    args:
      creates: "{{ www_root }}"

  - name: "link /var/www to {{ www_root }}"
    file:
      state: link
      src: "{{ www_root }}"
      path: "/var/www"

  - name: "log dest {{ www_log }}"
    file:
      state: directory
      path: "{{ www_log }}"

  - name: "cron stop nginx for backup"
    cron:
      name: "stop nginx"
      hour: "{{ backup_web_stop_hour }}"
      minute: "{{ backup_web_stop_minute }}"
      job: "/bin/systemctl stop nginx.service"

  - name: "cron start nginx for backup"
    cron:
      name: "start nginx"
      hour: "{{ backup_web_start_hour | mandatory }}"
      minute: "{{ backup_web_start_minute | mandatory }}"
      job: "/bin/systemctl start nginx.service"

  - name: "template for backup"
    template:
      src: backupninja.nginx.j2
      dest: "{{ backup_item_dir }}/10-nginx.sh"
      mode: 0640

  - name: "letsencrypt certbot repository"
    apt_repository:
      repo: "ppa:certbot/certbot"

  - name: "letsencrypt certbot package"
    apt:
      name: certbot
      update_cache: yes

  - name: "cron for automatic letsencrypt renew"
    cron:
      name: "letsencrypt certbot automatic renew"
      weekday: 1
      hour: "{{ renew_cert_web_stop_hour | mandatory}}"
      minute: "{{ renew_cert_web_stop_minute | mandatory }}"
      job: "/usr/bin/certbot renew --quiet"

  - name: "monit.nginx.j2"
    template:
      src: "monit.nginx.j2"
      dest: "/etc/monit/conf.d/nginx.conf"
    notify: reload monit

#  - name: "disabling default website"
#    file:
#      state: absent
#      path: "/etc/nginx/sites-enabled/default"
#    notify: reload nginx
